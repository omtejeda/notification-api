//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NotificationService.SharedKernel.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    ///   This class was generated by MSBuild using the GenerateResource task.
    ///   To add or remove a member, edit your .resx file then rerun MSBuild.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Build.Tasks.StronglyTypedResourceBuilder", "15.1.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Messages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Messages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("NotificationService.SharedKernel.Resources.Messages", typeof(Messages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Api key was not provided.
        /// </summary>
        public static string ApiKeyNotProvided {
            get {
                return ResourceManager.GetString("ApiKeyNotProvided", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not allowed sending to {0} in non production environment.
        /// </summary>
        public static string NotAllowedToSendInNonProd {
            get {
                return ResourceManager.GetString("NotAllowedToSendInNonProd", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Api key was not valid.
        /// </summary>
        public static string ApiKeyNotValid {
            get {
                return ResourceManager.GetString("ApiKeyNotValid", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Api key was not active.
        /// </summary>
        public static string ApiKeyNotActive {
            get {
                return ResourceManager.GetString("ApiKeyNotActive", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Attachment is required.
        /// </summary>
        public static string AttachmentIsRequired {
            get {
                return ResourceManager.GetString("AttachmentIsRequired", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Notification does not exist.
        /// </summary>
        public static string NotificationNotExists {
            get {
                return ResourceManager.GetString("NotificationNotExists", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Notification was not created by you.
        /// </summary>
        public static string NotificationWasNotCreatedByYou {
            get {
                return ResourceManager.GetString("NotificationWasNotCreatedByYou", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Notification request was not found.
        /// </summary>
        public static string NotificationRequestNotFound {
            get {
                return ResourceManager.GetString("NotificationRequestNotFound", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Template already exists.
        /// </summary>
        public static string TemplateAlreadyExists {
            get {
                return ResourceManager.GetString("TemplateAlreadyExists", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Template you are trying to delete does not exist.
        /// </summary>
        public static string TemplateTryingToDeleteNotExists {
            get {
                return ResourceManager.GetString("TemplateTryingToDeleteNotExists", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Template does not exist.
        /// </summary>
        public static string TemplateNotExists {
            get {
                return ResourceManager.GetString("TemplateNotExists", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Template does not belong to you.
        /// </summary>
        public static string TemplateNotBelongsToYou {
            get {
                return ResourceManager.GetString("TemplateNotBelongsToYou", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Template does not have content.
        /// </summary>
        public static string TemplateWithNoContent {
            get {
                return ResourceManager.GetString("TemplateWithNoContent", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Template content is not valid.
        /// </summary>
        public static string TemplateContentNotValid {
            get {
                return ResourceManager.GetString("TemplateContentNotValid", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Template was not created by you.
        /// </summary>
        public static string TemplateWasNotCreatedByYou {
            get {
                return ResourceManager.GetString("TemplateWasNotCreatedByYou", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Notification type is not valid.
        /// </summary>
        public static string NotificationTypeNotValid {
            get {
                return ResourceManager.GetString("NotificationTypeNotValid", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Catalog specified does not exist.
        /// </summary>
        public static string CatalogSpecifiedNotExists {
            get {
                return ResourceManager.GetString("CatalogSpecifiedNotExists", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Catalog specified does not have the given key.
        /// </summary>
        public static string CatalogSpecifiedNotHaveGivenKey {
            get {
                return ResourceManager.GetString("CatalogSpecifiedNotHaveGivenKey", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Template specified does not correspond to the given notification type.
        /// </summary>
        public static string TemplateSpecifiedNotCorrespondToGivenNotificationType {
            get {
                return ResourceManager.GetString("TemplateSpecifiedNotCorrespondToGivenNotificationType", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Provider specified does not exist.
        /// </summary>
        public static string ProviderSpecifiedNotExists {
            get {
                return ResourceManager.GetString("ProviderSpecifiedNotExists", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Provider specified is not suitable.
        /// </summary>
        public static string ProviderSpecifiedNotSuitable {
            get {
                return ResourceManager.GetString("ProviderSpecifiedNotSuitable", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Notification type specified is not allowed.
        /// </summary>
        public static string NotificationTypeSpecifiedNotAllowed {
            get {
                return ResourceManager.GetString("NotificationTypeSpecifiedNotAllowed", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Attachment was not found.
        /// </summary>
        public static string AttachmentNotFound {
            get {
                return ResourceManager.GetString("AttachmentNotFound", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Provider type is not valid.
        /// </summary>
        public static string ProviderTypeNotValid {
            get {
                return ResourceManager.GetString("ProviderTypeNotValid", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Provider already exists.
        /// </summary>
        public static string ProviderAlreadyExists {
            get {
                return ResourceManager.GetString("ProviderAlreadyExists", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Platform already exists.
        /// </summary>
        public static string PlatformAlreadyExists {
            get {
                return ResourceManager.GetString("PlatformAlreadyExists", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Platform with given ID does not exist.
        /// </summary>
        public static string PlatformWithGivenIdNotExists {
            get {
                return ResourceManager.GetString("PlatformWithGivenIdNotExists", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Platform was not created by you.
        /// </summary>
        public static string PlatformWasNotCreatedByYou {
            get {
                return ResourceManager.GetString("PlatformWasNotCreatedByYou", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Provider is not public, neither was it created by you.
        /// </summary>
        public static string ProviderIsNotPublicNeitherWasCreatedByYou {
            get {
                return ResourceManager.GetString("ProviderIsNotPublicNeitherWasCreatedByYou", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Catalog already exists.
        /// </summary>
        public static string CatalogAlreadyExists {
            get {
                return ResourceManager.GetString("CatalogAlreadyExists", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Catalog with given ID does not exist.
        /// </summary>
        public static string CatalogWithGivenIdNotExists {
            get {
                return ResourceManager.GetString("CatalogWithGivenIdNotExists", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Catalog was not created by you.
        /// </summary>
        public static string CatalogWasNotCreatedByYou {
            get {
                return ResourceManager.GetString("CatalogWasNotCreatedByYou", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Required value was not provided.
        /// </summary>
        public static string RequiredValue {
            get {
                return ResourceManager.GetString("RequiredValue", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Value is not valid.
        /// </summary>
        public static string ValueNotValid {
            get {
                return ResourceManager.GetString("ValueNotValid", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to HTTP verb is not allowed.
        /// </summary>
        public static string HttpVerbNotAllowed {
            get {
                return ResourceManager.GetString("HttpVerbNotAllowed", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Metadata is required by the provider.
        /// </summary>
        public static string MetadataRequiredByProvider {
            get {
                return ResourceManager.GetString("MetadataRequiredByProvider", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Provider with given ID does not exist.
        /// </summary>
        public static string ProviderWithGivenIdNotExists {
            get {
                return ResourceManager.GetString("ProviderWithGivenIdNotExists", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Provider was not created by you.
        /// </summary>
        public static string ProviderWasNotCreatedByYou {
            get {
                return ResourceManager.GetString("ProviderWasNotCreatedByYou", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Recipient does not exist.
        /// </summary>
        public static string RecipientNotExists {
            get {
                return ResourceManager.GetString("RecipientNotExists", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Recipient already exists.
        /// </summary>
        public static string RecipientAlreadyExists {
            get {
                return ResourceManager.GetString("RecipientAlreadyExists", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Provider settings conflict.
        /// </summary>
        public static string ProviderSettingsConflict {
            get {
                return ResourceManager.GetString("ProviderSettingsConflict", resourceCulture);
            }
        }
    }
}
